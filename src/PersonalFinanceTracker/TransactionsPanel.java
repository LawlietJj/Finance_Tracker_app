/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package PersonalFinanceTracker;
import java.awt.Color;
import java.math.BigDecimal;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;
/**
 *
 * @author HP ElitePC
 */
public class TransactionsPanel extends javax.swing.JPanel {

    DefaultTableModel secondTableModel;
    /**
     * Creates new form TransactionsPanel
     */
    public TransactionsPanel() {
        initComponents();
        table();
        
         NumberFormat nf = NumberFormat.getNumberInstance(new Locale("en", "NG"));
        nf.setMaximumFractionDigits(2); // set decimals if you want

        // Create NumberFormatter with that format
        NumberFormatter formatter = new NumberFormatter(nf);
        formatter.setAllowsInvalid(false);  // don't allow invalid chars
        formatter.setOverwriteMode(false);

        // Assuming your JFormattedTextField is named amountfield
        amountfield.setFormatterFactory(new DefaultFormatterFactory(formatter));
    }

    
         public void table() {
        
                 Database db = new Database();
                 
                   secondTableModel = db.Transactions();
                   jTable1.setModel(secondTableModel);
                    jTable1.setRowHeight(25);
                    jTable1.setBackground(Color.GRAY.brighter());
                    
 
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        Amount = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        categoryBox = new javax.swing.JComboBox<>();
        Category = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        amountfield = new javax.swing.JFormattedTextField();

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setSelectionBackground(new java.awt.Color(153, 153, 153));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        updateBtn.setBackground(new java.awt.Color(0, 204, 204));
        updateBtn.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(51, 51, 51));
        updateBtn.setText("UPDATE TABLE");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(0, 204, 204));
        deleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(51, 51, 51));
        deleteBtn.setText("DELETE RECORDS");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        Amount.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        Amount.setText("INCOME AMOUNT");

        date.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        date.setText("DATE");

        categoryBox.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        categoryBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Salary", "Gifts", "Investments", "Freelance/Side Hustle", "Refunds/Reimbursements" }));

        Category.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        Category.setText("CATEGORY");

        jDateChooser2.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N

        amountfield.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Category, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(categoryBox, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(amountfield, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
            .addGroup(layout.createSequentialGroup()
                .addGap(339, 339, 339)
                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Category)
                        .addComponent(Amount)
                        .addComponent(categoryBox, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(amountfield, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(date)
                        .addGap(15, 15, 15))
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
            DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
              int selectedIndex = jTable1.getSelectedRow();

              if (selectedIndex == -1) {
                  JOptionPane.showMessageDialog(this, "Please select a record to update");
                  return;
              }

              try {
                  int id = Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString());
                  String category = categoryBox.getSelectedItem().toString();
                  Number value = (Number) amountfield.getValue();
                  if (value == null) {
                      JOptionPane.showMessageDialog(this, "Please enter a valid amount.");
                      return;
                  }
                  BigDecimal amount = BigDecimal.valueOf(value.doubleValue());

                  Date selectedDate = jDateChooser2.getDate();

                  if (category.isEmpty() || selectedDate == null) {
                      JOptionPane.showMessageDialog(this, "All fields are required.");
                      return;
                  }

                  java.sql.Date sqlDate = new java.sql.Date(selectedDate.getTime());

                  Database db = new Database();
                  boolean success = db.updateTransaction(id, category, amount, sqlDate);

                  if (success) {
                      JOptionPane.showMessageDialog(this, "Record updated successfully!");
                      table_update();  // refresh table
                      

                      amountfield.setValue(null);
                      jDateChooser2.setDate(null);
                      categoryBox.requestFocus();
                  } else {
                      JOptionPane.showMessageDialog(this, "Failed to update record.");
                  }

              } catch (Exception ex) {
                  JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
                  ex.printStackTrace();
      }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        Database db = new Database();
        
        DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
                int selectedIndex = jTable1.getSelectedRow();

                if (selectedIndex == -1) {
                    JOptionPane.showMessageDialog(this, "Please select a record to delete.");
                    return;
                }

                int id = Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString());

                int dialogResult = JOptionPane.showConfirmDialog(null,
                        "Do you want to delete this record?", "Warning",
                        JOptionPane.YES_NO_OPTION);

                if (dialogResult == JOptionPane.YES_OPTION) {
                    boolean success = db.deleteTransactionRecord(id);

                    if (success) {
                        JOptionPane.showMessageDialog(this, "Transaction deleted");
                        table_update();

                        amountfield.setText("");
                        
                        categoryBox.requestFocus();
                    } else {
                        JOptionPane.showMessageDialog(this, "Failed to delete the record.");
                    }
                }     
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
               DefaultTableModel Df = (DefaultTableModel) jTable1.getModel();
    int selectedIndex = jTable1.getSelectedRow();

    if (selectedIndex != -1) {
        String category = Df.getValueAt(selectedIndex, 2).toString(); // Category index 2
        String amount = Df.getValueAt(selectedIndex, 3).toString();  // Amount index 3
        Object dateObj = Df.getValueAt(selectedIndex, 4);            // Date index 4 (as Object)

        

        categoryBox.setSelectedItem(category);

        try {
            BigDecimal amountValue = new BigDecimal(amount.replaceAll(",", ""));
            amountfield.setValue(amountValue);
        } catch (NumberFormatException e) {
            amountfield.setText(amount);
        }

        try {
            if (dateObj instanceof java.util.Date) {
                // Directly set if already a Date or Timestamp object
                jDateChooser2.setDate((java.util.Date) dateObj);
            } else {
                // Parse as string with datetime format
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                Date parsedDate = sdf.parse(dateObj.toString());
                jDateChooser2.setDate(parsedDate);
            }
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_jTable1MouseClicked

     private void table_update() {
                    Database db = new Database();
                DefaultTableModel model = db.incomeTable();
                jTable1.setModel(model);
                jTable1.setRowHeight(25);
            }
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Amount;
    private javax.swing.JLabel Category;
    private javax.swing.JFormattedTextField amountfield;
    private javax.swing.JComboBox<String> categoryBox;
    private javax.swing.JLabel date;
    private javax.swing.JButton deleteBtn;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
